<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on ChaGu CTF</title><link>https://chagu.org/tags/python/</link><description>Recent content in Python on ChaGu CTF</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 30 Apr 2017 11:22:32 +0200</lastBuildDate><atom:link href="https://chagu.org/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>UIUCTF 2017 CTF: Are we out of the woods yet?</title><link>https://chagu.org/posts/uiuctf-2017_out_of_the_woods_rev350/</link><pubDate>Sun, 30 Apr 2017 11:22:32 +0200</pubDate><guid>https://chagu.org/posts/uiuctf-2017_out_of_the_woods_rev350/</guid><description>350 Points - Reversing It looks like this python script was run through a custom packer. It's just Python*, which means it must be easy to reverse, right? *v3.6.1:69c0db5 https://www.youtube.com/watch?v=y8qQsXpcZXA This was fun little challenge that our team solved together. You are presented with the file packed.py that contains the following code:
import marshal, zlib, base64, itertools def xor_strings(_left, _k): out = b'' for l, r in zip(_left, itertools.cycle(_k)): out += (l ^ ord(r)).</description></item><item><title>AlexCTF Re4: Python rev</title><link>https://chagu.org/posts/alexctf-2017-02-05_re4/</link><pubDate>Sun, 05 Feb 2017 11:22:32 +0200</pubDate><guid>https://chagu.org/posts/alexctf-2017-02-05_re4/</guid><description>In this challenge we got a python byte-code file. So the first step was to get the source code for this file. By using uncompyle2 we could get the python source code. That looked like this.
import md5 md5s = [174282896860968005525213562254350376167L, 137092044126081477479435678296496849608L, 126300127609096051658061491018211963916L, 314989972419727999226545215739316729360L, 256525866025901597224592941642385934114L, 115141138810151571209618282728408211053L, 8705973470942652577929336993839061582L, 256697681645515528548061291580728800189L, 39818552652170274340851144295913091599L, 65313561977812018046200997898904313350L, 230909080238053318105407334248228870753L, 196125799557195268866757688147870815374L, 74874145132345503095307276614727915885L] print &amp;#39;Can you turn me back to python ? ...&amp;#39; flag = raw_input(&amp;#39;well as you wish.. what is the flag: &amp;#39;) if len(flag) &amp;gt; 69: print &amp;#39;nice try&amp;#39; exit() if len(flag) % 5 !</description></item></channel></rss>